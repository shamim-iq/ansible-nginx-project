---
- hosts: all
  become: true
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image_ubuntu: ubuntu
    default_container_image_debian: debian
    default_container_command: sleep 1d

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
      when:  ansible_distribution == 'Ubuntu'

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true
      when:  ansible_distribution == 'Ubuntu'

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when:  ansible_distribution == 'Ubuntu'

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present
      when:  ansible_distribution == 'Ubuntu'

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true
      when:  ansible_distribution == 'Ubuntu'

    - name: Install Docker Module for Python
      pip:
        name: docker
      when:  ansible_distribution == 'Ubuntu'

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image_ubuntu }}"
        source: pull
      when:  ansible_distribution == 'Ubuntu'

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image_ubuntu }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
      when:  ansible_distribution == 'Ubuntu'
#For debian server
    - name: Install apt-transport-https and ca-certificates
      apt:
        name:
          - apt-transport-https
          - ca-certificates
        state: present
        update_cache: yes
      when: ansible_distribution == 'Debian'

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      when: ansible_distribution == 'Debian'

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian buster stable
        state: present
      when: ansible_distribution == 'Debian'

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: yes
      when: ansible_distribution == 'Debian'

    - name: Install Docker Module for Python
      pip:
        name: docker
      when: ansible_distribution == 'Debian'

    - name: Pull default Docker image
      community.docker.docker_image:
        name: "{{ default_container_image_debian }}"
        source: pull
      when: ansible_distribution == 'Debian'

    - name: Create default containers
      community.docker.docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image_debian }}"
        command: "{{ default_container_command }}"
        state: present
      with_sequence: count={{ container_count }}
      when: ansible_distribution == 'Debian'
